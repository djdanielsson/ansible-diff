---
# tasks file for compare
- name: file 1
  ansible.builtin.stat:
    path: "{{ tests_file1 }}"
  register: r_test1

- name: file 2
  ansible.builtin.stat:
    path: "{{ tests_file2 }}"
  register: r_test2

- name: debug check vv
  ansible.builtin.debug:
    msg: "{{ r_test1.stat }}"
    verbosity: 2

- block:
    - name: check for diff
      ansible.builtin.debug:
        msg: "file are the same"
      failed_when: r_test1.stat.checksum != r_test2.stat.checksum

  rescue:
    - name: line by line
      ansible.builtin.template:
        src: templates/diff.txt.j2
        dest: diff.txt

    - name: debug check vv
      ansible.builtin.debug:
        msg: "{{ file1_list|length }}"
        verbosity: 2

    - name: debug check vv
      ansible.builtin.debug:
        msg: "{{ file2_list|length }}"
        verbosity: 2

    - name: setfact
      ansible.builtin.set_fact:
        file1_length: "{{ file1_list|length }}"

    - name: setfact
      ansible.builtin.set_fact:
        file2_length: "{{ file2_list|length }}"

    - name: creating a new file1 to modify
      ansible.builtin.copy:
        src: "{{ tests_file1 }}"
        dest: "{{ tests_file1_tmp }}"
        remote_src: yes

    - name: line by lineV2
      ansible.builtin.lineinfile:
        path: "{{ tests_file1_tmp }}"
        line: "{{ item }}"
        state: absent
      register: diffs1
      when: "{{ file1_length }} != {{ file2_length }}"
      loop: "{{ file2_list }}"

    - name: get file1 contents
      ansible.builtin.slurp:
        src: "{{ tests_file1_tmp }}"
      register: diff1_content
      when: diffs1.changed

    - name: append file contents to diff.txt
      ansible.builtin.lineinfile:
        path: "{{ diff_txt }}"
        line: "{{ diff1_content['content']|b64decode }}"
        insertafter: EOF
      when: diffs1.changed


    - name: creating a new file2 to modify
      ansible.builtin.copy:
        src: "{{ tests_file2 }}"
        dest: "{{ tests_file2_tmp }}"
        remote_src: yes

    - name: line by lineV2
      ansible.builtin.lineinfile:
        path: "{{ tests_file2_tmp }}"
        line: "{{ item }}"
        state: absent
      register: diffs2
      when: "{{ file1_length }} != {{ file2_length }}"
      loop: "{{ file1_list }}"

    - name: get file2 contents
      ansible.builtin.slurp:
        src: "{{ tests_file2_tmp }}"
      register: diff2_content
      when: diffs2.changed

    - name: copy diffs into diff.txt
      ansible.builtin.lineinfile:
        path: "{{ diff_txt }}"
        line: "{{ diff2_content['content']|b64decode }}"
        insertafter: EOF
      when: diffs2.changed

